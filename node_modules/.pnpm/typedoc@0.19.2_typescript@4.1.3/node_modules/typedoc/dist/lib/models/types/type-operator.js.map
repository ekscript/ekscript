{"version":3,"file":"type-operator.js","sourceRoot":"","sources":["../../../../src/lib/models/types/type-operator.ts"],"names":[],"mappings":";;;AAAA,yCAAkC;AAUlC,MAAa,gBAAiB,SAAQ,eAAI;IAMtC,YAAmB,MAAY,EAAS,QAAyC;QAC7E,KAAK,EAAE,CAAC;QADO,WAAM,GAAN,MAAM,CAAM;QAAS,aAAQ,GAAR,QAAQ,CAAiC;QAFxE,SAAI,GAAG,cAAc,CAAC;IAI/B,CAAC;IAOD,KAAK;QACD,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IACpE,CAAC;IAQD,MAAM,CAAC,IAAsB;QACzB,IAAI,CAAC,CAAC,IAAI,YAAY,gBAAgB,CAAC,EAAE;YACrC,OAAO,KAAK,CAAC;SAChB;QAED,OAAO,IAAI,YAAY,gBAAgB,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClH,CAAC;IAKD,QAAQ;QACJ,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;IACxD,CAAC;CACJ;AAvCD,4CAuCC","sourcesContent":["import { Type } from './abstract';\n\n/**\n * Represents a type operator type.\n *\n * ~~~\n * class A {}\n * class B<T extends keyof A> {}\n * ~~~\n */\nexport class TypeOperatorType extends Type {\n    /**\n     * The type name identifier.\n     */\n    readonly type = 'typeOperator';\n\n    constructor(public target: Type, public operator: 'keyof' | 'unique' | 'readonly') {\n        super();\n    }\n\n    /**\n     * Clone this type.\n     *\n     * @return A clone of this type.\n     */\n    clone(): Type {\n        return new TypeOperatorType(this.target.clone(), this.operator);\n    }\n\n    /**\n     * Test whether this type equals the given type.\n     *\n     * @param type  The type that should be checked for equality.\n     * @returns TRUE if the given type equals this type, FALSE otherwise.\n     */\n    equals(type: TypeOperatorType): boolean {\n        if (!(type instanceof TypeOperatorType)) {\n            return false;\n        }\n\n        return type instanceof TypeOperatorType && type.operator === this.operator && type.target.equals(this.target);\n    }\n\n    /**\n     * Return a string representation of this type.\n     */\n    toString() {\n        return `${this.operator} ${this.target.toString()}`;\n    }\n}\n"]}