"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NamedTupleMember = exports.TupleType = void 0;
const abstract_1 = require("./abstract");
class TupleType extends abstract_1.Type {
    constructor(elements) {
        super();
        this.type = 'tuple';
        this.elements = elements;
    }
    clone() {
        return new TupleType(this.elements);
    }
    equals(type) {
        if (!(type instanceof TupleType)) {
            return false;
        }
        return abstract_1.Type.isTypeListEqual(type.elements, this.elements);
    }
    toString() {
        const names = [];
        this.elements.forEach((element) => {
            names.push(element.toString());
        });
        return '[' + names.join(', ') + ']';
    }
}
exports.TupleType = TupleType;
class NamedTupleMember extends abstract_1.Type {
    constructor(name, isOptional, element) {
        super();
        this.name = name;
        this.isOptional = isOptional;
        this.element = element;
        this.type = 'named-tuple-member';
    }
    clone() {
        return new NamedTupleMember(this.name, this.isOptional, this.element.clone());
    }
    equals(type) {
        if (!(type instanceof NamedTupleMember)) {
            return false;
        }
        return this.isOptional === type.isOptional && this.element.equals(type.element);
    }
    toString() {
        return `${this.name}${this.isOptional ? '?' : ''}: ${this.element}`;
    }
}
exports.NamedTupleMember = NamedTupleMember;
//# sourceMappingURL=tuple.js.map