import { int } from '../../global.d';
import { Literal, Token } from '../../types/parser';
export declare enum EkTokenType {
    IMPORT = 0,
    FROM = 1,
    EXPORT = 2,
    DEFAULT = 3,
    LET = 4,
    CONST = 5,
    FUNCTION = 6,
    RETURN = 7,
    WHILE = 8,
    BREAK = 9,
    CONTINUE = 10,
    FOR = 11,
    IF = 12,
    ELSE = 13,
    SWITCH = 14,
    CASE = 15,
    DECLARE = 16,
    IDENTIFIER = 17,
    TYPE = 18,
    TYPEOF = 19,
    AS = 20,
    READONLY = 21,
    ENUM = 22,
    INTERFACE = 23,
    CLASS = 24,
    CONSTRUCTOR = 25,
    IMPLEMENTS = 26,
    EXTENDS = 27,
    PUBLIC = 28,
    PRIVATE = 29,
    PROTECTED = 30,
    GET = 31,
    SET = 32,
    THIS = 33,
    NEW = 34,
    STATIC = 35,
    ABSTRACT = 36,
    ASYNC = 37,
    AWAIT = 38,
    YIELD = 39,
    THROW = 40,
    CATCH = 41,
    TYPE_INT = 42,
    TYPE_CHAR = 43,
    TYPE_FLOAT = 44,
    TYPE_BOOL = 45,
    TYPE_BIGINT = 46,
    NULL = 47,
    TYPE_NUMBER = 48,
    TYPE_STRING = 49,
    VOID = 50,
    TYPE_ARRAY = 51,
    TYPE_RECORD = 52,
    TYPE_PARTIAL = 53,
    RIGHT_PAREN = 54,
    LEFT_PAREN = 55,
    RIGHT_CURLY = 56,
    LEFT_CURLY = 57,
    RIGHT_SQUARE = 58,
    LEFT_SQUARE = 59,
    COLON = 60,
    SEMICOLON = 61,
    DOT = 62,
    TRIPLE_DOT = 63,
    COMMA = 64,
    BANG = 65,
    BANG_EQUAL = 66,
    EQUAL = 67,
    EQUAL_EQUAL = 68,
    ARROW = 69,
    GREATER = 70,
    GREATER_GREATER = 71,
    GREATER_EQUAL = 72,
    LESS = 73,
    LESS_LESS = 74,
    LESS_EQUAL = 75,
    STAR = 76,
    STAR_STAR = 77,
    STAR_EQUAL = 78,
    PLUS = 79,
    INCREMENT = 80,
    PLUS_EQUAL = 81,
    MINUS = 82,
    DECREMENT = 83,
    MINUS_EQUAL = 84,
    SLASH = 85,
    SLASH_SLASH = 86,
    SLASH_EQUAL = 87,
    QUESTION = 88,
    QUES_QUES = 89,
    QUES_DOT = 90,
    AND = 91,
    AND_EQUAL = 92,
    AND_AND = 93,
    OR = 94,
    OR_EQUAL = 95,
    OR_OR = 96,
    SINGLE_QUOTES = 97,
    DOUBLE_QUOTES = 98,
    BACKTICK = 99,
    DOLLAR = 100,
    LIT_INT = 101,
    LIT_FLOAT = 102,
    LIT_CHAR = 103,
    LIT_BOOL = 104,
    LIT_BIGINT = 105,
    LIT_TRUE = 106,
    LIT_FALSE = 107,
    LIT_STRING = 108,
    EOF = 109,
    ERROR = 110
}
export declare enum StatementKind {
    BLOCKSTMT = 0,
    EXPRSTMT = 1,
    IFSTMT = 2,
    WHILESTMT = 3,
    PRINTSTMT = 4,
    VARSTMT = 5,
    FUNCSTMT = 6,
    RETURNSTMT = 7
}
export declare enum ExprKind {
    TERNARYEXPR = 0,
    BINARYEXPR = 1,
    GROUPINGEXPR = 2,
    NILEXPR = 3,
    CALLEXPR = 4,
    LITERALEXPR = 5,
    UNARYEXPR = 6,
    ASSIGNEXPR = 7,
    VAREXPR = 8,
    LOGICALEXPR = 9
}
export declare const newToken: ({ tokenType, lexeme, literal, line, posStart, }: {
    tokenType: EkTokenType;
    lexeme: string;
    literal: Literal;
    line: any;
    posStart: any;
}) => Token;
